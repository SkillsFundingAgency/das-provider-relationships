@using SFA.DAS.ProviderRelationships.Web.RouteValues.AccountProviders
@using SFA.DAS.ProviderRelationships.Types.Models
@model SFA.DAS.ProviderRelationships.Web.ViewModels.AccountProviderLegalEntities.GetAccountProviderLegalEntityViewModel

@{
    ViewBag.Title = Model.AccountLegalEntity.Name;
    ViewBag.ZenDeskLabel = "permissions-set-permissions";
    var recruitmentNoOptionId = string.Empty;
    const string RecruitmentNoBlurbId = "recruitmentNoBlurb";
    var hasRecruitmentPermissionPreviouslyBeenSet = false;
}

@section breadcrumb
{
    @if (Model.AccountLegalEntitiesCount == 1)
    {
        <a class="govuk-back-link" href="@Url.Action("Index", "AccountProviders")">Back</a>
    }
    else
    {
        <a class="govuk-back-link" href="@Url.Action("Get", "AccountProviders", new GetAccountProviderRouteValues { AccountProviderId = Model.AccountProvider.Id })">Back</a>
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">Set permissions</h1>
    </div>
    <div class="govuk-grid-column-two-thirds">
        <p class="govuk-body">You can allow @Model.AccountProvider.ProviderName to do tasks on your behalf, this can include creating vacancies, reserving funding and adding apprentice records.</p>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-half">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header">Permissions</th>
                        <th class="govuk-table__header"></th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @for (var i = 0; i < Model.Operations.Count; i++)
                    {
                        var isRecruitmentPermission = Model.Operations[i].Value.Equals(Operation.Recruitment);
                        hasRecruitmentPermissionPreviouslyBeenSet = Model.Operations[i].IsEnabled.HasValue ?  Model.Operations[i].IsEnabled.Value : false;
                        var recruitmentCountCaption = Model.NoOfProviderCreatedVacancies > 0
                                                        ? Model.NoOfProviderCreatedVacancies.ToString()
                                                        : "Any";

                        if (isRecruitmentPermission == false)
                        {
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">
                                    @Html.HiddenFor(m => m.Operations[i].Value)
                                    @Model.Operations[i].Value.GetDescription()
                                </td>
                                <td class="govuk-table__cell">
                                    <div class="govuk-form-group govuk-!-margin-bottom-0 govuk-!-margin-top-2">
                                        <fieldset class="govuk-fieldset">
                                            <div class="govuk-radios govuk-radios--inline" data-module="radios">
                                                <div class="govuk-radios__item">
                                                    @Html.RadioButtonFor(m => m.Operations[i].IsEnabled, true, new { id = $"operation-{i}-yes", @class = "govuk-radios__input" })
                                                    <label class="govuk-label govuk-radios__label" for="operation-@i-yes">
                                                        Yes
                                                    </label>
                                                </div>
                                                <div class="govuk-radios__item">
                                                    @Html.RadioButtonFor(m => m.Operations[i].IsEnabled, false, new { id = $"operation-{i}-no", @class = "govuk-radios__input" })
                                                    <label class="govuk-label govuk-radios__label" for="operation-@i-no">
                                                        No
                                                    </label>
                                                </div>
                                            </div>
                                        </fieldset>
                                    </div>
                                </td>
                            </tr>
                        }

                        if (isRecruitmentPermission)
                        {
                            recruitmentNoOptionId = $"operation-{i}-no";
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">
                                    @Html.HiddenFor(m => m.Operations[i].Value)
                                    @Model.Operations[i].Value.GetDescription()
                                </td>
                                <td class="govuk-table__cell">
                                    <div class="govuk-form-group govuk-!-margin-bottom-0 govuk-!-margin-top-2">
                                        @if (Model.IsProviderBlockedFromRecruit)
                                        {
                                            <strong>Not allowed</strong>
                                        }
                                        else
                                        {
                                            <fieldset class="govuk-fieldset">
                                                <div class="govuk-radios govuk-radios--inline" data-module="radios">
                                                    <div class="govuk-radios__item">
                                                        @Html.RadioButtonFor(m => m.Operations[i].IsEnabled, true, new { id = $"operation-{i}-yes", @class = "govuk-radios__input" })
                                                        <label class="govuk-label govuk-radios__label" for="operation-@i-yes">
                                                            Yes
                                                        </label>
                                                    </div>
                                                    <div class="govuk-radios__item">
                                                        @Html.RadioButtonFor(m => m.Operations[i].IsEnabled, false, new { id = recruitmentNoOptionId, @class = "govuk-radios__input" })
                                                        <label class="govuk-label govuk-radios__label" for="operation-@i-no">
                                                            No
                                                        </label>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        }
                                    </div>
                                </td>
                            </tr>
                            if (Model.IsProviderBlockedFromRecruit)
                            {
                                <tr>
                                    <td class="govuk-table__cell" colspan="2">
                                        <div class="govuk-inset-text govuk-!-margin-top-0 govuk-!-margin-bottom-2">
                                            <p class="govuk-body">
                                                This provider is no longer able to recruit apprentices on behalf of employers.
                                            </p>
                                        </div>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr id="@RecruitmentNoBlurbId">
                                    <td class="govuk-table__cell" colspan="2">
                                        <div class="govuk-inset-text govuk-!-margin-top-0 govuk-!-margin-bottom-2">
                                            <p class="govuk-body">
                                                If you select no, @Model.AccountProvider.ProviderName will no longer be able to post vacancies, or manage apprentices on your behalf.
                                            </p>
                                            <p class="govuk-body">@recruitmentCountCaption vacancies the provider has created will be transferred to your account.</p>
                                            <div class="govuk-warning-text">
                                                <span class="govuk-warning-text__icon das-warning-text__icon" aria-hidden="true">!</span>
                                                <strong class="govuk-warning-text__text">
                                                    <span class="govuk-warning-text__assistive">Warning</span>
                                                    Live vacancies that have been transferred will be closed.
                                                    Vacancies sent for review will be sent back to draft.
                                                </strong>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>

            <button class="govuk-button" type="submit">Set permissions</button>
        }
    </div>
</div>
@section footerJS
{
    @if (Model.IsProviderBlockedFromRecruit == false)
    {
    <script>
        $(function() {
            var $recruitmentNoBlurb = $('#@RecruitmentNoBlurbId'),
                $recruitmentNoOption = $('#@recruitmentNoOptionId').first();

            $recruitmentNoBlurb.hide();

            @if (hasRecruitmentPermissionPreviouslyBeenSet)
            {
                <text>
                $recruitmentNoOption.change(function () {
                    if ($recruitmentNoOption.prop("checked")) {
                        $recruitmentNoBlurb.show();
                    }
                });
                </text>
            }
        });
    </script>
    }
}